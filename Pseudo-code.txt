#Morpion 
import random as r

On défninit la définition la fonction plateau qui va créer une grille de 3x3
    On créer un variable tab qui contient une liste vide
    Pour i allant de 0 à 3 
        Alors on créer une variable tab2 contenant une liste vide
        Pour j allant de 0 à 3
            On ajoute à tab2 une chaine de caractère contenant un espace vide
        On ajoute tab2 à la liste tab
    On retourne tab 

On définit la fonction printTab qui va afficher un tableau en format tableau et non en liste, il prend un tableau "tab" en parametre
    Pour i allant de 0 à la longueur de tab
        Afficher tab d'indice i 
        Afficher espace vide pour aller à la ligne

On définit une fonction example qui montre au joueur quel chiffre rentrer pour jouer un coup
    on créer une liste vide nommée tab
    on créer une variable incrementeur, on lui asigne 1
    Pour i allant de 0 à 3
        on créer une variable tab2 contenant une liste vide
        Pour j allant de 0 à 3
            on ajoute à tab2 incrementeur 
            on ajoute 1 à incrementeur
        on ajoute tab2 à tab
    On affiche "Pour placer votre symbole, entrez un chiffre comme dans l'exemple ci-dessous"
    On appelle la fonction printTab de paramètre tab

On définit une fonction pose_player avec en parametre tab et nb, elle va poser le symbole du joueur
    si nb est égal à 1
        Si le tableau à l'indice 0, 0  est égal à un espace 
            Alors on met à tableau à l'indice 0, 0 la valeur 'X'
    si nb est égal à 2
        Si le tableau à l'indice 0, 1  est égal à un espace
            Alors on met à tableau à l'indice 0, 1 la valeur 'X'
    si nb est égal à 3
        Si le tableau à l'indice 0, 2  est égal à un espace
            Alors on met à tableau à l'indice 0, 2 la valeur 'X'
    si nb est égal à 4
        Si le tableau à l'indice 1, 0  est égal à un espace
            Alors on met à tableau à l'indice 1, 0 la valeur 'X'
    si nb est égal à 5
        Si le tableau à l'indice 1, 1  est égal à un espace
            Alors on met à tableau à l'indice 1, 1 la valeur 'X'
    si nb est égal à 6
        Si le tableau à l'indice 1, 2 est égal à un espace
            Alors on met à tableau à l'indice 1, 2 la valeur 'X'
   si nb est égal à 7
        Si le tableau à l'indice 2, 0  est égal à un espace
            Alors on met à tableau à l'indice 2, 0 la valeur 'X'
   si nb est égal à 8
        Si le tableau à l'indice 2, 1  est égal à un espace
            Alors on met à tableau à l'indice 2, 1 la valeur 'X'
   si nb est égal à 9
        Si le tableau à l'indice 2, 2  est égal à un espace
             Alors on met à tableau à l'indice 2, 2 la valeur 'X'
    Sinon
        On affiche "Entrez un nombre valide" 
    
def cases_libres (tab):
    '''Fonction qui renovoie une liste contenant les cases vides, elle va servir à arreter le jeu si cette liste est vide'''
    liste = []
    for i in range (3) :
        for j in range(3) :
            if tab[i][j] == ' ' :
                liste.append((i,j))
    #Cette liste contient des tuples des coordonnées des cases libres
    return liste
                
def pose_bot (tab) :
    '''Fonction qui va placer un signe du bot aléatoirement sur la grille'''
    liste =  cases_libres(tab) 
    #Cette liste de tuple contenant les coordonnées libres va permettre de ne pas placer de symbol sur une case déja prise
    #Mais aussi à savoir si le bot peut placer un symbol si la grille est pleine 
    if liste != []:
        coo = r.choice(liste)
        tab[coo[0]][coo[1]] = 'O' 
        return 
    else :
        return 

def checkAll(tab,sign):
    '''Fonction qui vérifier à chaque tour si il y a un alignement de trois signes mis en parametre'''
    if tab[0][0] == str(sign) and tab[0][1] == str(sign) and tab[0][2] == str(sign) :
        return True
    if tab[1][0] == str(sign) and tab[1][1] == str(sign) and tab[1][2] == str(sign) :
        return True
    if tab[2][0] == str(sign) and tab[2][1] == str(sign) and tab[2][2] == str(sign) :
        return True
    if tab[0][0] == str(sign) and tab[1][0] == str(sign) and tab[2][0] == str(sign) :
        return True
    if tab[0][1] == str(sign) and tab[1][1] == str(sign) and tab[2][1] == str(sign) :
        return True
    if tab[0][2] == str(sign) and tab[1][2] == str(sign) and tab[2][2] == str(sign) :
        return True
    if tab[0][0] == str(sign) and tab[1][1] == str(sign) and tab[2][2] == str(sign) :
        return True
    if tab[0][2] == str(sign) and tab[1][1] == str(sign) and tab[2][0] == str(sign) :
        return True
    else:
        return False

#----- A garder -----
tableau = plateau()
printTab(tableau)

example()
#-------------------

while cases_libres(tableau) != [] :
    #On demande au joueur de choisir son chiffre et on place son symbol sur la grille
    nombre = input("Choisissez un nombre pour placer votre croix: ")
    pose_player(tableau,nombre)
    printTab(tableau)
    if checkAll(tableau,'X') == True :
        print("Le joueur a gagné")
        break
    pose_bot(tableau)
    printTab(tableau)
    if checkAll(tableau,'0') == True :
        print("Le bot a gagné")
        break
